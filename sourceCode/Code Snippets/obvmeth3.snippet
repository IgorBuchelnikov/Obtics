<CodeSnippets
    xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>
        ValueProvider instance method using ExpressionObserver with 3 parameters
      </Title>
      <Description>Creates a ValueProvider instance method using a static lambda function generated by ExpressionObserver with 3 parameters.</Description>
      <Keywords>
        <Keyword>Method</Keyword>
        <Keyword>ValueProvider</Keyword>
        <Keyword>ExpressionObserver</Keyword>
        <Keyword>Observable</Keyword>
        <Keyword>Live</Keyword>
      </Keywords>
      <Shortcut>obvmeth3</Shortcut>
    </Header>
    <Snippet>
      
      <References>
        <Reference>
          <Assembly>Obtics</Assembly>
        </Reference>
      </References>

      <Imports>
        <Import>
          <Namespace>System</Namespace>
        </Import>
      </Imports>

      <Declarations>
        <Literal Editable="false">
          <ID>ClassName</ID>
          <ToolTip>Type of the owning class.</ToolTip>
          <Function>ClassName()</Function>
          <Default>MyClass</Default>
        </Literal>
        <Literal>
          <ID>TPrm1</ID>
          <ToolTip>Type of the first parameter.</ToolTip>
          <Default>int</Default>
        </Literal>
        <Literal>
          <ID>TPrm2</ID>
          <ToolTip>Type of the second parameter.</ToolTip>
          <Default>int</Default>
        </Literal>
        <Literal>
          <ID>TPrm3</ID>
          <ToolTip>Type of the third parameter.</ToolTip>
          <Default>int</Default>
        </Literal>
        <Literal>
          <ID>prm1</ID>
          <ToolTip>Name of the first parameter.</ToolTip>
          <Default>prm1</Default>
        </Literal>
        <Literal>
          <ID>prm2</ID>
          <ToolTip>Name of the second parameter.</ToolTip>
          <Default>prm2</Default>
        </Literal>
        <Literal>
          <ID>prm3</ID>
          <ToolTip>Name of the third parameter.</ToolTip>
          <Default>prm3</Default>
        </Literal>
        <Literal>
          <ID>TResult</ID>
          <ToolTip>Type of the method result.</ToolTip>
          <Default>int</Default>
        </Literal>
        <Literal>
          <ID>MethodName</ID>
          <ToolTip>Name of the method.</ToolTip>
          <Default>MyMethod</Default>
        </Literal>
        <Literal Editable="false">
          <ID>IValueProvider</ID>
          <Function>SimpleTypeName(Obtics.Values.IValueProvider)</Function>
        </Literal>
        <Literal Editable="false">
          <ID>ExpressionObserver</ID>
          <Function>SimpleTypeName(Obtics.Values.ExpressionObserver)</Function>
        </Literal>
      </Declarations>
      
      <Code Language="CSharp">
        <![CDATA[
        $IValueProvider$<$TResult$> $MethodName$($TPrm1$ $prm1$, $TPrm2$ $prm2$, $TPrm3$ $prm3$)
        { return _$MethodName$F(this, $prm1$, $prm2$, $prm3$); }
        
        static Func<$ClassName$,$TPrm1$,$TPrm2$,$TPrm3$,$IValueProvider$<$TResult$>> _$MethodName$F =
            $ExpressionObserver$.Compile(
                ($ClassName$ t, $TPrm1$ $prm1$, $TPrm2$ $prm2$, $TPrm3$ $prm3$) =>
                    default($TResult$) //insert expression here
            );        
                ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
