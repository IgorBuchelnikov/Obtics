[
  {
    "Id": "223712",
    "ThreadId": "65753",
    "Html": "<p>Hi, Is this project ready to be used with Silverlight? I was confused going through <a href=\"http://silverlight.net/forums/t/93085.aspx\">http://silverlight.net/forums/t/93085.aspx</a>&nbsp;which mentions about an aggregate on an&nbsp;observable collection. But when I tried to add the binaries to my SL project, I got a &quot;Not built against Silverlight runtime error&quot;.</p>\r\n<p>Can you please advise.</p>\r\n<p>Thanks Vinay</p>",
    "PostedDate": "2009-08-14T14:35:02.4-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "223736",
    "ThreadId": "65753",
    "Html": "<p>Hi Vinay,</p>\r\n<p>Unfortunately Obtics has not been ensured yet against silverlight.</p>\r\n<p>The binaries have been compiled against the standard .Net libraries. I am not a Silverlight expert but I know that it&nbsp;uses its own set of runtime&nbsp;libraries. (its own System, System.Core etc. assemblies) and the Obtics sources will need to be compiled&nbsp;against those for it to be usable&nbsp;with Silverlight. I haven't done it yet and I expect there will be some incompatibilities but I don't know how bad they will be.</p>\r\n<p>If someone would&nbsp;like to do this I would be very interested.</p>\r\n<p>Regs,</p>\r\n<p>Thomas.</p>",
    "PostedDate": "2009-08-14T16:25:37.577-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "226740",
    "ThreadId": "65753",
    "Html": "<p>The latest source checkin (26133) has a project Obtics_Silverlight that builds a working Obtics&nbsp;library for Silverlight.</p>\r\n<p>The help of BindingHelper_Silverlight is needed for convenient binding to IValueProvider properties. Checkout ObticsUnitTestRunner_SilverLight for an example.</p>\r\n<p>Regs,</p>\r\n<p>Thomas.</p>",
    "PostedDate": "2009-08-22T18:11:40.58-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "228121",
    "ThreadId": "65753",
    "Html": "<p>I downloaded the latest binaries and followed instructions mentioned in <a href=\"http://silverlight.net/forums/t/93085.aspx\">http://silverlight.net/forums/t/93085.aspx</a>&nbsp;</p>\r\n<p>I basically need to track sum of a particular property within an object which implments INOtifyChange. However I get the following compilation error</p>\r\n<p>Error&nbsp;9&nbsp;The call is ambiguous between the following methods or properties: 'System.Linq.Enumerable.Sum&lt;SLSocketsApp1.CustOrderDecorator&gt;(System.Collections.Generic.IEnumerable&lt;SLSocketsApp1.CustOrderDecorator&gt;, System.Func&lt;SLSocketsApp1.CustOrderDecorator,decimal?&gt;)' and 'Obtics.Collections.ObservableEnumerable.Sum&lt;SLSocketsApp1.CustOrderDecorator&gt;(System.Collections.Generic.IEnumerable&lt;SLSocketsApp1.CustOrderDecorator&gt;, System.Func&lt;SLSocketsApp1.CustOrderDecorator,decimal?&gt;)'&nbsp;</p>\r\n<p>Can you please provide me a sample. I tried the chm help on your download site but that seems to be broken since it does nt show the articles on the right panel.</p>\r\n<p>Your help is very appreciated.</p>\r\n<p>Thanks</p>\r\n<p>VInay</p>",
    "PostedDate": "2009-08-26T13:13:19.527-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "228172",
    "ThreadId": "65753",
    "Html": "<p>Hi Vinay,</p>\r\n<p>When using ExpressionObserver with Linq statements don't include the Obtics.Collections namespace in your source code. Extension methods in the ObservableEnumerable will conflict with the ones in System.Linq.Enumerable. ExpressionObserver will do the mapping of System.Linq.Enumerable methods to Obtics.Collections.ObservableEnumerable methods.</p>\r\n<p>Also you will need the 'Concrete' extension method from the BindingHelper_Silverlight library. This is (I think, with my limited Silverlight knowledge) because Silverlight can not resolve Interface properties explicitly. The Code behind will become like:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">using</span> System.Linq;\r\n<span style=\"color:Blue\">using</span> Obtics;\r\n<span style=\"color:Blue\">using</span> Obtics.Values;\r\n<span style=\"color:Green\">//using Obtics.Collections; Not!</span>\r\n\r\n<span style=\"color:Blue\">public</span> <span style=\"color:Blue\">partial</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> Test : UserControl\r\n</span>{\r\n    ObservableCollection&lt;TElement&gt; _vals;\r\n\r\n    <span style=\"color:Blue\">public</span> IValueProvider&lt;TSomefield&gt; Total \r\n    {\r\n        <span style=\"color:Blue\">get</span>\r\n        {\r\n            <span style=\"color:Blue\">return</span> ExpressionObserver.Execute( ()=&gt; _vals.Sum(p=&gt;p.somefield) ).Concrete();\r\n        }\r\n    }\r\n}</pre>\r\n</div>",
    "PostedDate": "2009-08-26T16:22:51.433-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "228383",
    "ThreadId": "65753",
    "Html": "<p>The&nbsp;snippet you provided above does not seem to provide lambda expressions or bind to the text box. I am binding using the following</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">&lt;</span></span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Canvas.Top</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;80&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> x</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">:</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\">Name</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;total&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Text</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;{</span></span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">Binding</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Path</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=Total.Value}&quot;/&gt;</span></span></p>\r\n<p>Following the sample provided in the RegexTool within your source, I tried to add a reference in my xaml and bind using the following</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&lt;</p>\r\n&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> x</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">:</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\">Name</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;total&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Text</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;{</span></span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">Binding</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Path</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=Total.(ov:IValueProvider.Value),</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> UpdateSourceTrigger</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=PropertyChanged}&quot;/&gt;</span></span></p>\r\n<p><span style=\"color:#0000ff\">But this gives me a runtime error of invalid element found. I am not sure if the ExpressionObserver.Execute is being binded properly to the control. Can you give me a sample where by an aggregated value is being binded to a textblock. The reason I am trying this software is because I want to be able to do more complex lamda statements following ObservableCollections. I could use CLINQ but this seems like a more promising version.</span></p>\r\n<p><span style=\"color:#0000ff\">Any help will be appreciated. Also you compiled help file seems to be broken.</span></p>\r\n<p><span style=\"color:#0000ff\">Thanks</span></p>\r\n<p><span style=\"color:#0000ff\">Vinay</span></p>\r\n</p>",
    "PostedDate": "2009-08-27T06:38:45.623-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "228475",
    "ThreadId": "65753",
    "Html": "<p>Hi Vinay,</p>\r\n<p>The snipped provided here is just the code behind. You should be able to bind to it in silverlight using code like:</p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&lt;</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">TextBlock</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Canvas.Top</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;80&quot;</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> x</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">Name</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;total&quot;</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Text</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;{</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">Binding</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Path</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=Total.Value}&quot;/&gt;</span></span></p>\r\n<p>Explicit property reference doesn't seem to work in Silverlight. (The&nbsp;Text<span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;{</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">Binding</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Path</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=Total.(ov:IValueProvider.Value)&quot;</span></span>&nbsp;version). What is needed is the Concrete() extension method. It creates an adapter for the&nbsp;IValueProvider interface that is of a concrete and public&nbsp;type. The Concrete() method is used in the example snipped.</p>\r\n<p>The bit:&nbsp;()=&gt; _vals.Sum(p=&gt;p.somefield)&nbsp;in the snipped&nbsp;is a lambda expression. Just one that doesn't take any arguments. The snipped could also be written as (and would actually be better but slightly more code) :</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">using</span> System.Linq;\r\n<span style=\"color:Blue\">using</span> Obtics;\r\n<span style=\"color:Blue\">using</span> Obtics.Values;\r\n<span style=\"color:Green\">//using Obtics.Collections; Not!</span>\r\n\r\n<span style=\"color:Blue\">public</span> <span style=\"color:Blue\">partial</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> Test : UserControl\r\n</span>{\r\n    ObservableCollection&lt;TElement&gt; _vals;\r\n\r\n    <span style=\"color:Blue\">public</span> IValueProvider&lt;TSomefield&gt; Total \r\n    {\r\n        <span style=\"color:Blue\">get</span>\r\n        {\r\n            <span style=\"color:Blue\">return</span> ExpressionObserver.Execute( _vals, c =&gt; c.Sum(p=&gt;p.somefield) ).Concrete();\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p>The project ObticsUnitTestRunner_SilverLight in the solution (source files) builds a silverlight application. In the ViewModel class (in ViewModel.cs) is a property 'PassedCount' and 'FailedCount'. These properties do not use in-place compilation but pre-compile the lambda expressions. The principle is the same though. The last method executed to yield the result is Concrete() and the Xaml (MainPage.Xaml) binds to the properties.</p>\r\n<p>So for the PassedCount property (pre-compiled):</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">#region</span> PassedCount ; total number of visible test methods that have passed during their last run.\r\n        <span style=\"color:Blue\">public</span> IValueProvider&lt;<span style=\"color:Blue\">int</span>&gt; PassedCount\r\n        { <span style=\"color:Blue\">get</span> { <span style=\"color:Blue\">return</span> _PassedCountF(<span style=\"color:Blue\">this</span>).Async().Concrete(); } }\r\n\r\n        <span style=\"color:Blue\">static</span> Func&lt;ViewModel, IValueProvider&lt;<span style=\"color:Blue\">int</span>&gt;&gt; _PassedCountF =\r\n            ExpressionObserver.Compile(\r\n                (ViewModel t) =&gt;\r\n                    t.VisibleMethods\r\n                        .Where(m =&gt; t.Context.GetTestMethodResult(m.TestMethod).Value.Type == TestResultType.Success)\r\n                        .Count()\r\n            );\r\n<span style=\"color:Blue\">#endregion</span>\r\n</pre>\r\n</div>\r\n<p>Xaml (ViewModel is the DataContext):</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ContentControl</span> <span style=\"color:Red\">Margin</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">0,12,12,12</span><span style=\"color:Black\">&quot;</span>  <span style=\"color:Red\">Content</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=PassedCount.Value}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n\r\n</pre>\r\n</div>\r\n<p>What do you mean by the help file seems broken? Undoubtedly many things are still missing but it does work. You need a viewer for it (an HTML help 1x viewer) and it may be possible that windows blocks the helpfile (because you downloaded it from the internet). You&nbsp;may need to&nbsp;right-mouse-click on it, select properties and click 'Unblock' on the 'General' tab.</p>\r\n<p>Hope this helps.</p>\r\n<p>Regs,</p>\r\n<p>THomas.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-08-27T10:26:51.243-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "228713",
    "ThreadId": "65753",
    "Html": "<p>Thomas, Thanks a lot for the response. Since I needed the option urgently, I created another object implementing INotifychanged. The helpfile being broken, I meant that I am not able to see the details of the indeces. It may be some settings on my PC. I will try this in detail because it may turn out to be very useful in circumstances where one wants to&nbsp;bind multiple controls out of a single observable collection. E.g. I need to implement filter options on an observablecollection which is binded to a datagrid, by using distinct feature for each property (or column) in the grid. Also the observable collection implements a real time listening and binding, so I believe&nbsp;obtics supports that. Thanks for the help on this</p>",
    "PostedDate": "2009-08-28T07:26:36.673-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "228745",
    "ThreadId": "65753",
    "Html": "<p>Thomas, I tried your suggested approach again. I have a simple Page with just a textblock with an observablecollection which updates every second based on a timer. I am not using using an MVVM model. Its&nbsp;a very simple bind to control approach.</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&lt;</p>\r\n&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Text</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;Status&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Foreground</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;#FF14517B&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Margin</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;5,0,0,0&quot;&gt;&lt;/</span></span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">&gt;</span></span></p>\r\n</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&lt;</p>\r\n&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> x</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">:</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\">Name</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;total&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Text</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;{</span></span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">Binding</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Path</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=Total.Value}&quot;/&gt;</span></span></p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> IValueProvider&lt;<span style=\"color:Blue\">int</span>&gt; Total\r\n        {\r\n            <span style=\"color:Blue\">get</span>\r\n            {\r\n                <span style=\"color:Blue\">return</span> ExpressionObserver.Execute(custOrdersList, c =&gt; c.Sum(p =&gt; p.ExecSharesCum)).Concrete();\r\n            }\r\n        }\r\n</pre>\r\n</div>\r\n<p>However I dont see the textblock display any data. Should i be doing something else. I will appreciate if you could forward me a quick sample displaying the same.</p>\r\n<p>Thanks again for all the help</p>",
    "PostedDate": "2009-08-28T08:39:44.547-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "228877",
    "ThreadId": "65753",
    "Html": "<p>Hi Vinay,</p>\r\n<p>Find an example project here: <a href=\"http://obtics.codeplex.com/Wiki/View.aspx?title=Poc\">http://obtics.codeplex.com/Wiki/View.aspx?title=Poc</a></p>\r\n<p>It is almost the same. For simplicity it takes the sum over an ObservableCollection of int and uses a timer to randomly change elements in&nbsp;the collection.</p>\r\n<p>Regs,</p>\r\n<p>Thomas.</p>",
    "PostedDate": "2009-08-28T16:59:12.08-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "232680",
    "ThreadId": "65753",
    "Html": "<p>Thomas thanks a lot for the sample. I was incorrectly binding from the XAML.</p>",
    "PostedDate": "2009-09-09T07:18:59.3-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "233200",
    "ThreadId": "65753",
    "Html": "<p>Thomas</p>\r\n<p>Thanks for the quick response.</p>\r\n<p>In a similar exercise, the following seems to give a runtime error. It worked well if i have native type in observablecollection.</p>\r\n<p>MainPage.xaml</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">partial</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> MainPage : UserControl\r\n    </span>{\r\n        <span style=\"color:Blue\">public</span> MainPage()\r\n        {\r\n            InitializeComponent();\r\n\r\n            <span style=\"color:Blue\">for</span> (<span style=\"color:Blue\">int</span> i = 0; i &lt; 10; ++i)\r\n                _Integers.Add(<span style=\"color:Blue\">new</span> Person(_Rnd.Next(100)));\r\n\r\n            _Timer.Interval = <span style=\"color:Blue\">new</span> TimeSpan(0, 0, 2);\r\n            _Timer.Tick += <span style=\"color:Blue\">new</span> EventHandler(_Timer_Tick);\r\n            _Timer.Start();\r\n        }\r\n\r\n        <span style=\"color:Blue\">void</span> _Timer_Tick(<span style=\"color:Blue\">object</span> sender, EventArgs e)\r\n        {\r\n            _Integers[_Rnd.Next(10)].AddIncome(_Rnd.Next(100)); \r\n        }\r\n\r\n        Random _Rnd = <span style=\"color:Blue\">new</span> Random();\r\n        System.Windows.Threading.DispatcherTimer _Timer = <span style=\"color:Blue\">new</span> System.Windows.Threading.DispatcherTimer();\r\n\r\n        ObservableCollection&lt;Person&gt; _Integers = <span style=\"color:Blue\">new</span> ObservableCollection&lt;Person&gt;();\r\n\r\n        <span style=\"color:Blue\">public</span> IValueProvider&lt;<span style=\"color:Blue\">int</span>&gt; Sum\r\n        { <span style=\"color:Blue\">get</span> { <span style=\"color:Blue\">return</span> ExpressionObserver.Execute(_Integers, c =&gt; c.Sum(p=&gt;p.Income)).Concrete(); } }\r\n    }\r\n\r\n    <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> Person\r\n    </span>{\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">int</span> Income;\r\n        <span style=\"color:Blue\">public</span> Person(<span style=\"color:Blue\">int</span> income)\r\n        {\r\n            <span style=\"color:Blue\">this</span>.Income = income;\r\n        }\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">void</span> AddIncome (<span style=\"color:Blue\">int</span> inc)\r\n        {\r\n            <span style=\"color:Blue\">this</span>.Income += inc;\r\n        }\r\n    }<br></pre>\r\n<pre>MainPage.xaml</pre>\r\n<pre><div style=\"color:Black;background-color:White\"><pre>&lt;TextBox Text=<span style=\"color:#A31515\">&quot;{Binding Path=Sum.Value}&quot;</span> /&gt;\r\n</pre>\r\n</div>\r\n</pre>\r\n</div>",
    "PostedDate": "2009-09-10T10:07:19.513-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "233309",
    "ThreadId": "65753",
    "Html": "<p>Hi Vinay,</p>\r\n<p>Though I have not been able to verify it yet; I think the problem with your code is that the Person class is not public.</p>\r\n<p>Due to CAS restrictions (reflection) when running with Silverlight, Obtics is not allowed to compile expressions with references to&nbsp;members that are not public. Though Income is public it is still hidden because the owning class is not.</p>\r\n<p>If you would like the result to respond to changes in Income you will need&nbsp;to make Income a property, implement INotifyPropertyChanged on Person and raise PropertyChanged events whenever you change the value of income.&nbsp;</p>\r\n<p>Hope this helps.</p>\r\n<p>Thomas.</p>",
    "PostedDate": "2009-09-10T14:00:41.73-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "233721",
    "ThreadId": "65753",
    "Html": "<p>Thomas, that was correct, I had to raise OnPropertyChanged to reflect the changes. That made it work. But if I export an object from a WCF service, and then implement updates, how do I raise the event there. The stub does implement a Notifychanged but how do we further add a OnPropertyChanged for some properties.</p>\r\n<p>Thanks</p>\r\n<p>Vinay</p>",
    "PostedDate": "2009-09-11T12:12:48.57-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "234013",
    "ThreadId": "65753",
    "Html": "<p>Hi Vinay,</p>\r\n<p>Unfortunately I'm not much of a WCF expert (yet).</p>\r\n<p>Bottom line is that Obtics needs to be informed when something of interest has changed value. The most common route (for properties) is to implement INotifyPropertyChanged(*). If and how this can be done with (runtime generated?) WCF&nbsp;objects I'm not sure. Most&nbsp;classes generated by tools in VisualStudio are partial&nbsp;classes, so you&nbsp;might be able to insert the logic in a partial class?&nbsp;</p>\r\n<p>If you have&nbsp;more details&nbsp;about your challenge I might be able to give some hints but no guarantees.</p>\r\n<p>*It is possible to notify Obtics in different ways but these are more complex. If you are interested you can check out the 'CustomMapping and ObticsToXml' projects. I'm sorry that the documentation is still too rudimentary.</p>\r\n<p>Regs,</p>\r\n<p>Thomas.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-09-13T05:42:05.89-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]