[
  {
    "Id": "857855",
    "ThreadId": "362106",
    "Html": "\r\n<pre><div style=\"color:black; background-color:white\"><pre>        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> CreateQueries()\r\n        {\r\n            GridData =\r\n                ExpressionObserver.Execute(() =&gt;\r\n                                               <span style=\"color:blue\">from</span> o <span style=\"color:blue\">in</span> _orders\r\n                                               <span style=\"color:blue\">where</span> o.State != OrderStateEnum.Canceled\r\n                                               <span style=\"color:blue\">group</span> o <span style=\"color:blue\">by</span> o.Isin\r\n                                               <span style=\"color:blue\">into</span> g\r\n                                               <span style=\"color:blue\">let</span> germanSymbol = _referenceData.GetGermanSymbol(g.Key)\r\n                                               <span style=\"color:blue\">let</span> primarySymbol = _referenceData.GetPrimaryExchangeSymbol(g.Key)\r\n                                               <span style=\"color:blue\">let</span> name = _referenceData.GetInstrumentName(g.Key)\r\n                                               <span style=\"color:blue\">orderby</span> name <span style=\"color:blue\">ascending</span>\r\n                                               <span style=\"color:blue\">let</span> primaryExchange = _referenceData.GetPrimaryExchangeId(g.Key)\r\n                                               <span style=\"color:blue\">from</span> q <span style=\"color:blue\">in</span> _quotes\r\n                                                   .Where(w =&gt; w.Isin == g.Key &amp;&amp;\r\n                                                               w.Exchange == primaryExchange &amp;&amp;\r\n                                                               w.Provider == ProviderEnum.Bloomberg).DefaultIfEmpty(\r\n                                                                   <span style=\"color:blue\">new</span> QuoteTickViewModel())\r\n                                               <span style=\"color:blue\">select</span> <span style=\"color:blue\">new</span> ComplexRowViewModel()\r\n                                                          {\r\n                                                              Isin = g.Key,\r\n                                                              Name = name,\r\n                                                              GermanSymbol = germanSymbol,\r\n                                                              PrimarySymbol = primarySymbol,\r\n                                                              PrimaryExchange = <span style=\"color:blue\">new</span> SimpleRowViewModel()\r\n                                                                                    {\r\n                                                                                        Ask = (<span style=\"color:blue\">decimal</span>) q.Ask,\r\n                                                                                        AskSize = q.AskSize,\r\n                                                                                        Bid = (<span style=\"color:blue\">decimal</span>) q.Bid,\r\n                                                                                        BidSize = q.BidSize,\r\n                                                                                        Exchange = q.Exchange,\r\n                                                                                        Isin = q.Isin,\r\n                                                                                        Last = (<span style=\"color:blue\">decimal</span>) q.Last,\r\n                                                                                        LastSize = q.LastSize,\r\n                                                                                        LastTime = q.Time\r\n                                                                                    },\r\n                                                              Groupped =\r\n                                                                  <span style=\"color:blue\">from</span> qx <span style=\"color:blue\">in</span>\r\n                                                                      _quotes.Where(\r\n                                                                          w =&gt;\r\n                                                                          w.Isin == g.Key &amp;&amp;\r\n                                                                          w.Provider == ProviderEnum.Tradebase &amp;&amp;\r\n                                                                          w.Exchange != primaryExchange)\r\n                                                                  <span style=\"color:blue\">select</span> <span style=\"color:blue\">new</span> SimpleRowViewModel()\r\n                                                                             {\r\n                                                                                 Ask = (<span style=\"color:blue\">decimal</span>) qx.Ask,\r\n                                                                                 AskSize = qx.AskSize,\r\n                                                                                 Bid = (<span style=\"color:blue\">decimal</span>) qx.Bid,\r\n                                                                                 BidSize = qx.BidSize,\r\n                                                                                 Exchange = qx.Exchange,\r\n                                                                                 Isin = qx.Isin,\r\n                                                                                 Last = (<span style=\"color:blue\">decimal</span>) qx.Last,\r\n                                                                                 LastSize = qx.LastSize,\r\n                                                                                 LastTime = qx.Time\r\n                                                                             }\r\n                                                          }\r\n                        ).Cascade();\r\n        }\r\n</pre>\r\n</div>\r\n<br></pre>\r\n<pre>As you see I got this query in my application. Top collection is <strong>orders </strong>which is almost static, but the nested <strong>Groupped </strong>collection is keeps getting updated. But insted of just updating the related properties, whole list getting recreated every update.</pre>\r\n<pre><br></pre>\r\n<pre>I was wondering if there is a solution for this ?</pre>\r\n",
    "PostedDate": "2012-07-05T06:37:29.273-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "858233",
    "ThreadId": "362106",
    "Html": "\r\n<p>I don't know which property is changing to cause the entire collection to update but what strikes me is that you seem to use an outer&nbsp;join between your grouped _orders and _quotes where you actually want to use an inner join.</p>\r\n<p>With an outer&nbsp;join every group will need to be regarded when a relevant property of any _quote changes, as opposed to&nbsp;an inner join where only the associated groups will be checked.</p>\r\n<p>Regs,</p>\r\n<p>Thomas.</p>\r\n",
    "PostedDate": "2012-07-06T01:46:52.303-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "858341",
    "ThreadId": "362106",
    "Html": "<p>Allright I've somehow fixed that problem but now I got a new one :)</p>\r\n<p>&nbsp;</p>\r\n<p>Added item does not appear at given index '1'.</p>\r\n<p>It is a typical threading problem but I really dont know what can I do about it.<span style=\"white-space: pre;\"> </span></p>\r\n<p>'Pulse.UI.vshost.exe' (Managed (v4.0.30319)): Loaded 'C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll'A first chance exception of type 'System.InvalidOperationException' occurred in PresentationFramework.dllSystem.Transactions Critical: 0 : &lt;TraceRecord xmlns=\"http://schemas.microsoft.com/2004/10/E2ETraceEvent/TraceRecord\" Severity=\"Critical\"&gt;&lt;TraceIdentifier&gt;http://msdn.microsoft.com/TraceCodes/System/ActivityTracing/2004/07/Reliability/Exception/Unhandled&lt;/TraceIdentifier&gt;&lt;Description&gt;Unhandled exception&lt;/Description&gt;&lt;AppDomain&gt;Pulse.UI.vshost.exe&lt;/AppDomain&gt;&lt;Exception&gt;&lt;ExceptionType&gt;System.InvalidOperationException, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/ExceptionType&gt;&lt;Message&gt;Added item does not appear at given index '1'.&lt;/Message&gt;&lt;StackTrace&gt; &nbsp; at MS.Internal.Data.EnumerableCollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs args)&nbsp; &nbsp;at System.Windows.Data.CollectionView.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs args)&nbsp; &nbsp;at Obtics.NCToNCC.NotifyChanged(Object sender, INCEventArgs changeArgs)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(Object rawMessage)&nbsp; &nbsp;at Obtics.Collections.Transformations.NotifyVpcTransformation`2.Notifier.NotifyChanged(Object sender, INCEventArgs changeArgs)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObjectToVP`2.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObjectToVP`2.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObjectToVP`2.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.TranslucentTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(Object rawMessage)&nbsp; &nbsp;at Obtics.Collections.Transformations.UnorderedCascadeTransformation`2.BufferNodeCC.NotifyChanged(Object sender, INCEventArgs changeArgs)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.TranslucentTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(Object rawMessage)&nbsp; &nbsp;at Obtics.Collections.Transformations.UnorderedNotifyVpcTransformation`2.Notifier.NotifyChanged(Object sender, INCEventArgs changeArgs)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObjectToVP`2.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObjectToVP`2.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Values.Transformations.PropertyTransformation`2.Buffer_PropertyChanged(Object sender, EventArgs args)&nbsp; &nbsp;at Obtics.Values.Transformations.PropertyTransformation`2.npc_PropertyChanged(Object sender, PropertyChangedEventArgs e)&nbsp; &nbsp;at System.ComponentModel.PropertyChangedEventHandler.Invoke(Object sender, PropertyChangedEventArgs e)&nbsp; &nbsp;at GalaSoft.MvvmLight.ViewModelBase.RaisePropertyChanged(String propertyName) in D:\\GalaSoft\\mydotnet\\GalaSoft MVVM Light Toolkit\\Source\\V3\\GalaSoft.MvvmLight\\GalaSoft.MvvmLight (NET35)\\ViewModelBase.cs:line 234&nbsp; &nbsp;at Pulse.UI.ViewModels.OrderStatusViewModel.set_State(OrderStateEnum value) in C:\\Serkan\\Pulse Project\\Pulse.UI\\ViewModels\\OrderStatusViewModel.cs:line 236&nbsp; &nbsp;at Pulse.UI.ViewModels.OrderStatusViewModel.set_Status(OrderStatus value) in C:\\Serkan\\Pulse Project\\Pulse.UI\\ViewModels\\OrderStatusViewModel.cs:line 80&nbsp; &nbsp;at Pulse.UI.Common.MarketData.&amp;amp;lt;MessageHandler&amp;amp;gt;b__a(OrderStatusViewModel vm, OrderStatus m) in C:\\Serkan\\Pulse Project\\Pulse.UI\\Common\\MarketData.cs:line 219&nbsp; &nbsp;at Pulse.UI.Common.MarketData.&amp;amp;lt;&amp;amp;gt;c__DisplayClass20`2.&amp;amp;lt;CollectionKeeper&amp;amp;gt;b__1f() in C:\\Serkan\\Pulse Project\\Pulse.UI\\Common\\MarketData.cs:line 333&nbsp; &nbsp;at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)&nbsp; &nbsp;at MS.Internal.Threading.ExceptionFilterHelper.TryCatchWhen(Object source, Delegate method, Object args, Int32 numArgs, Delegate catchHandler)&nbsp; &nbsp;at System.Windows.Threading.DispatcherOperation.InvokeImpl()&nbsp; &nbsp;at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)&nbsp; &nbsp;at System.Threading.ExecutionContext.runTryCode(Object userData)&nbsp; &nbsp;at System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)&nbsp; &nbsp;at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)&nbsp; &nbsp;at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean ignoreSyncCtx)&nbsp; &nbsp;at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)&nbsp; &nbsp;at System.Windows.Threading.DispatcherOperation.Invoke()&nbsp; &nbsp;at System.Windows.Threading.Dispatcher.ProcessQueue()&nbsp; &nbsp;at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp;amp;amp; handled)&nbsp; &nbsp;at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp;amp;amp; handled)&nbsp; &nbsp;at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)&nbsp; &nbsp;at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)&nbsp; &nbsp;at MS.Internal.Threading.ExceptionFilterHelper.TryCatchWhen(Object source, Delegate method, Object args, Int32 numArgs, Delegate catchHandler)&nbsp; &nbsp;at System.Windows.Threading.Dispatcher.InvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)&nbsp; &nbsp;at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)&nbsp; &nbsp;at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG&amp;amp;amp; msg)&nbsp; &nbsp;at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)&nbsp; &nbsp;at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)&nbsp; &nbsp;at System.Windows.Application.RunDispatcher(Object ignore)&nbsp; &nbsp;at System.Windows.Application.RunInternal(Window window)&nbsp; &nbsp;at System.Windows.Application.Run(Window window)&nbsp; &nbsp;at System.Windows.Application.Run()&nbsp; &nbsp;at Pulse.UI.App.Main() in C:\\Serkan\\Pulse Project\\Pulse.UI\\obj\\x86\\Release\\App.g.cs:line 0&nbsp; &nbsp;at System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)&nbsp; &nbsp;at System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)&nbsp; &nbsp;at Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()&nbsp; &nbsp;at System.Threading.ThreadHelper.ThreadStart_Context(Object state)&nbsp; &nbsp;at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean ignoreSyncCtx)&nbsp; &nbsp;at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)&nbsp; &nbsp;at System.Threading.ThreadHelper.ThreadStart()&lt;/StackTrace&gt;&lt;ExceptionString&gt;System.InvalidOperationException: Added item does not appear at given index '1'.&nbsp; &nbsp;at MS.Internal.Data.EnumerableCollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs args)&nbsp; &nbsp;at System.Windows.Data.CollectionView.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs args)&nbsp; &nbsp;at Obtics.NCToNCC.NotifyChanged(Object sender, INCEventArgs changeArgs)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(Object rawMessage)&nbsp; &nbsp;at Obtics.Collections.Transformations.NotifyVpcTransformation`2.Notifier.NotifyChanged(Object sender, INCEventArgs changeArgs)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObjectToVP`2.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObjectToVP`2.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObjectToVP`2.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.TranslucentTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(Object rawMessage)&nbsp; &nbsp;at Obtics.Collections.Transformations.UnorderedCascadeTransformation`2.BufferNodeCC.NotifyChanged(Object sender, INCEventArgs changeArgs)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.TranslucentTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Collections.Transformations.OpaqueTransformationBase`3.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(Object rawMessage)&nbsp; &nbsp;at Obtics.Collections.Transformations.UnorderedNotifyVpcTransformation`2.Notifier.NotifyChanged(Object sender, INCEventArgs changeArgs)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObjectToVP`2.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObject`1.NotifyChanged(Object sender, INCEventArgs args)&nbsp; &nbsp;at Obtics.NotifyChangedReceiverTable.SendMessage(Object sender, INCEventArgs message)&nbsp; &nbsp;at Obtics.NCObservableObjectBase`1.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.NCSourcedObjectToVP`2.Release(INCEventArgs message)&nbsp; &nbsp;at Obtics.Values.Transformations.PropertyTransformation`2.Buffer_PropertyChanged(Object sender, EventArgs args)&nbsp; &nbsp;at Obtics.Values.Transformations.PropertyTransformation`2.npc_PropertyChanged(Object sender, PropertyChangedEventArgs e)&nbsp; &nbsp;at System.ComponentModel.PropertyChangedEventHandler.Invoke(Object sender, PropertyChangedEventArgs e)&nbsp; &nbsp;at GalaSoft.MvvmLight.ViewModelBase.RaisePropertyChanged(String propertyName) in D:\\GalaSoft\\mydotnet\\GalaSoft MVVM Light Toolkit\\Source\\V3\\GalaSoft.MvvmLight\\GalaSoft.MvvmLight (NET35)\\ViewModelBase.cs:line 234&nbsp; &nbsp;at Pulse.UI.ViewModels.OrderStatusViewModel.set_State(OrderStateEnum value) in C:\\Serkan\\Pulse Project\\Pulse.UI\\ViewModels\\OrderStatusViewModel.cs:line 236&nbsp; &nbsp;at Pulse.UI.ViewModels.OrderStatusViewModel.set_Status(OrderStatus value) in C:\\Serkan\\Pulse Project\\Pulse.UI\\ViewModels\\OrderStatusViewModel.cs:line 80&nbsp; &nbsp;at Pulse.UI.Common.MarketData.&amp;amp;lt;MessageHandler&amp;amp;gt;b__a(OrderStatusViewModel vm, OrderStatus m) in C:\\Serkan\\Pulse Project\\Pulse.UI\\Common\\MarketData.cs:line 219&nbsp; &nbsp;at Pulse.UI.Common.MarketData.&amp;amp;lt;&amp;amp;gt;c__DisplayClass20`2.&amp;amp;lt;CollectionKeeper&amp;amp;gt;b__1f() in C:\\Serkan\\Pulse Project\\Pulse.UI\\Common\\MarketData.cs:line 333&nbsp; &nbsp;at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)&nbsp; &nbsp;at MS.Internal.Threading.ExceptionFilterHelper.TryCatchWhen(Object source, Delegate method, Object args, Int32 numArgs, Delegate catchHandler)&nbsp; &nbsp;at System.Windows.Threading.DispatcherOperation.InvokeImpl()&nbsp; &nbsp;at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)&nbsp; &nbsp;at System.Threading.ExecutionContext.runTryCode(Object userData)&nbsp; &nbsp;at System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)&nbsp; &nbsp;at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)&nbsp; &nbsp;at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean ignoreSyncCtx)&nbsp; &nbsp;at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)&nbsp; &nbsp;at System.Windows.Threading.DispatcherOperation.Invoke()&nbsp; &nbsp;at System.Windows.Threading.Dispatcher.ProcessQueue()&nbsp; &nbsp;at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp;amp;amp; handled)&nbsp; &nbsp;at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp;amp;amp; handled)&nbsp; &nbsp;at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)&nbsp; &nbsp;at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)&nbsp; &nbsp;at MS.Internal.Threading.ExceptionFilterHelper.TryCatchWhen(Object source, Delegate method, Object args, Int32 numArgs, Delegate catchHandler)&nbsp; &nbsp;at System.Windows.Threading.Dispatcher.InvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)&nbsp; &nbsp;at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)&nbsp; &nbsp;at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG&amp;amp;amp; msg)&nbsp; &nbsp;at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)&nbsp; &nbsp;at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)&nbsp; &nbsp;at System.Windows.Application.RunDispatcher(Object ignore)&nbsp; &nbsp;at System.Windows.Application.RunInternal(Window window)&nbsp; &nbsp;at System.Windows.Application.Run(Window window)&nbsp; &nbsp;at System.Windows.Application.Run()&nbsp; &nbsp;at Pulse.UI.App.Main() in C:\\Serkan\\Pulse Project\\Pulse.UI\\obj\\x86\\Release\\App.g.cs:line 0&nbsp; &nbsp;at System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)&nbsp; &nbsp;at System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)&nbsp; &nbsp;at Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()&nbsp; &nbsp;at System.Threading.ThreadHelper.ThreadStart_Context(Object state)&nbsp; &nbsp;at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean ignoreSyncCtx)&nbsp; &nbsp;at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)&nbsp; &nbsp;at System.Threading.ThreadHelper.ThreadStart()&lt;/ExceptionString&gt;&lt;DataItems&gt;&lt;Data&gt;&lt;/Data&gt;&lt;/DataItems&gt;&lt;/Exception&gt;&lt;/TraceRecord&gt;</p>",
    "PostedDate": "2012-07-06T06:40:46.723-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "859186",
    "ThreadId": "362106",
    "Html": "<p>I am testing it for 3 days now. I've bumped my head to my desk several times because of this :) please help, I'm uploading my class which creates these queries.</p>\r\n<p>http://www.4shared.com/file/ce_V8PPh/MarketData.html</p>\r\n<p>Everything works fine until an OrderStatus gets a \"Cancelled\" state. I think it is because I filter the cancelled orders on top of the query. But how is this relevant I don't know. Anyway, the exception is:</p>\r\n<p>InvalidOperationException,&nbsp;Added item does not appear at given index '0'.</p>\r\n<p>But this totally makes no sense since the item is already there.</p>\r\n<p>I'd be really glad if anyone can help me.<span style=\"white-space: pre;\"> </span></p>",
    "PostedDate": "2012-07-09T07:15:02.817-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "859349",
    "ThreadId": "362106",
    "Html": "<p>As far as I understand, obtics engine is still searching for the order with active state but at that time the object already got the cancelled state. so if not an equal object returns i get an error.</p>\r\n<p>&nbsp;</p>\r\n<p>but the solutions is to keep a list with every orderstate which kind of impossible</p>",
    "PostedDate": "2012-07-09T13:34:02.197-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "859661",
    "ThreadId": "362106",
    "Html": "<p>It is probably the same issue as mentioned in this thread: <a href=\"http://obtics.codeplex.com/discussions/360575\">http://obtics.codeplex.com/discussions/360575</a></p>\r\n<p>The engine does not maintain a list with conversions. It uses your lambda function to find a conversion it needs for adding AND removing. So your lambda needs to return an equal result (not necessairily referentially equal) when it gets called with equal parameters. So:</p>\r\n<p>X&nbsp;x = value;</p>\r\n<p>Func&lt;X,Y&gt; yourLambda = &lt;stuff&gt;;</p>\r\n<p>Assert.IsTrue(EqualityComparer&lt;Y&gt;.Default.Equals(yourLambda(x),yourLambda(x)));</p>",
    "PostedDate": "2012-07-10T06:43:08.563-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "859692",
    "ThreadId": "362106",
    "Html": "\r\n<p>For other programmers who are having problems with this kind of exception, I ended up having this code.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> CreateQueries()\n        {\n            <span style=\"color:blue\">var</span> query = ExpressionObserver.Execute(() =&gt; (<span style=\"color:blue\">from</span> o <span style=\"color:blue\">in</span> _orders\n                                                          <span style=\"color:blue\">where</span> o.State != OrderStateEnum.Canceled\n                                                          <span style=\"color:blue\">group</span> o <span style=\"color:blue\">by</span> o.Isin\n                                                              <span style=\"color:blue\">into</span> g\n                                                              <span style=\"color:blue\">let</span> name = _referenceData.GetInstrumentName(g.Key)\n                                                              <span style=\"color:blue\">orderby</span> name <span style=\"color:blue\">ascending</span>\n                                                              <span style=\"color:blue\">select</span> GetComplexRowViewModel(\n                                                                                            g.First()\n                                                                                            ,\n                                                                                            (<span style=\"color:blue\">from</span> p <span style=\"color:blue\">in</span> _quotes\n                                                                                             <span style=\"color:blue\">where</span>\n                                                                                                 p.Isin == g.Key &amp;&amp;\n                                                                                                 p.Exchange == _referenceData.GetPrimaryExchangeId(g.Key) &amp;&amp;\n                                                                                                 p.Provider == ProviderEnum.Bloomberg\n                                                                                             <span style=\"color:blue\">select</span> GetSimpleRowViewModel(p))\n                                                                                             ,\n                                                                                             (<span style=\"color:blue\">from</span> q <span style=\"color:blue\">in</span> _quotes\n                                                                                              <span style=\"color:blue\">where</span>\n                                                                                                  q.Isin == g.Key &amp;&amp;\n                                                                                                  q.Provider == ProviderEnum.Tradebase &amp;&amp;\n                                                                                                  g.Select(s =&gt; s.Exchange).Contains(q.Exchange)\n                                                                                              <span style=\"color:blue\">select</span> GetSimpleRowViewModel(q))\n                                                                                              ,\n                                                                                              (<span style=\"color:blue\">from</span> o <span style=\"color:blue\">in</span> _orders\n                                                                                               <span style=\"color:blue\">where</span> o.Isin == g.Key\n                                                                                               &amp;&amp; o.State != OrderStateEnum.Canceled\n                                                                                               <span style=\"color:blue\">group</span> o <span style=\"color:blue\">by</span> <span style=\"color:blue\">new</span> { o.LimitPrice, o.OrderSide } <span style=\"color:blue\">into</span> x\n                                                                                               <span style=\"color:blue\">select</span> GetCompressedRowViewModel\n                                                                                               (\n                                                                                                   x.Key.OrderSide == OrderSideEnum.Sell ? (<span style=\"color:blue\">decimal</span>?)x.Key.LimitPrice : (<span style=\"color:blue\">decimal</span>?)<span style=\"color:blue\">null</span>,\n                                                                                                   x.Key.OrderSide == OrderSideEnum.Sell ? x.Select(s =&gt; s.Quantity).Aggregate((c, n) =&gt; c &#43; n) : 0,\n                                                                                                   x.Key.OrderSide == OrderSideEnum.Buy ? (<span style=\"color:blue\">decimal</span>?)x.Key.LimitPrice : (<span style=\"color:blue\">decimal</span>?)<span style=\"color:blue\">null</span>,\n                                                                                                   x.Key.OrderSide == OrderSideEnum.Buy ? x.Select(s =&gt; s.Quantity).Aggregate((c, n) =&gt; c &#43; n) : 0,\n                                                                                                   <span style=\"color:blue\">string</span>.Join(<span style=\"color:#a31515\">&quot;, &quot;</span>, x.Select(s =&gt; s.Exchange)),\n                                                                                                   x.First().Isin.ToString(),\n                                                                                                   x.Key.OrderSide == OrderSideEnum.Buy ? x.Count() : 0,\n                                                                                                   x.Key.OrderSide == OrderSideEnum.Sell ? x.Count() : 0,\n                                                                                                   x.Key.OrderSide == OrderSideEnum.Sell ? RowSide.Sell : RowSide.Buy\n                                                                                               ))\n                                                                   ,\n                                                                   (<span style=\"color:blue\">from</span> o <span style=\"color:blue\">in</span> _orders\n                                                                    <span style=\"color:blue\">where</span> o.Isin == g.Key\n                                                                    &amp;&amp; o.State != OrderStateEnum.Canceled\n                                                                    <span style=\"color:blue\">select</span> GetUncompressedRowViewModel(o))\n                                                                  \n                                                                                             ))).Cascade();\n            GridData = query;\n        }\n\n\n        <span style=\"color:green\">// Obtics </span>\n        <span style=\"color:blue\">private</span> ConcurrentDictionary&lt;<span style=\"color:blue\">string</span>, ComplexRowViewModel&gt; _complexRowViewModels = <span style=\"color:blue\">new</span> ConcurrentDictionary&lt;<span style=\"color:blue\">string</span>, ComplexRowViewModel&gt;();\n        <span style=\"color:blue\">private</span> ComplexRowViewModel GetComplexRowViewModel(OrderStatusViewModel model, IEnumerable&lt;SimpleRowViewModel&gt; primaryExchanges, IEnumerable&lt;SimpleRowViewModel&gt; groupped\n            , IEnumerable&lt;CompressedRowViewModel&gt; compressed, IEnumerable&lt;UncompressedRowViewModel&gt; uncompressed)\n        {\n            <span style=\"color:blue\">if</span> (model == <span style=\"color:blue\">null</span>)\n                <span style=\"color:blue\">return</span> _complexRowViewModels.GetOrAdd(<span style=\"color:#a31515\">&quot;&quot;</span>, s2 =&gt; <span style=\"color:blue\">new</span> ComplexRowViewModel());\n\n            <span style=\"color:blue\">return</span> _complexRowViewModels.GetOrAdd(model.Isin,\n                                                  s2 =&gt;\n                                                  <span style=\"color:blue\">new</span> ComplexRowViewModel(_referenceData) { UnderlyingOrder = model, PrimaryExchange = primaryExchanges.First(), Groupped = groupped, Compressed = compressed, Uncompressed = uncompressed });\n        }\n\n        <span style=\"color:blue\">private</span> ConcurrentDictionary&lt;<span style=\"color:blue\">string</span>, SimpleRowViewModel&gt; _simpleRowViewModels = <span style=\"color:blue\">new</span> ConcurrentDictionary&lt;<span style=\"color:blue\">string</span>, SimpleRowViewModel&gt;();\n        <span style=\"color:blue\">private</span> SimpleRowViewModel GetSimpleRowViewModel(QuoteTickViewModel model)\n        {\n            <span style=\"color:blue\">if</span> (model == <span style=\"color:blue\">null</span>)\n                <span style=\"color:blue\">return</span> _simpleRowViewModels.GetOrAdd(<span style=\"color:#a31515\">&quot;&quot;</span>, s2 =&gt; <span style=\"color:blue\">new</span> SimpleRowViewModel());\n\n            <span style=\"color:blue\">return</span> _simpleRowViewModels.GetOrAdd(model.Isin &#43; model.Exchange,\n                                                                s2 =&gt;\n                                                                <span style=\"color:blue\">new</span> SimpleRowViewModel() { UnderlyingQuote = model });\n        }\n\n        <span style=\"color:blue\">private</span> ConcurrentDictionary&lt;<span style=\"color:blue\">string</span>, UncompressedRowViewModel&gt; _uncompressedRowViewModels = <span style=\"color:blue\">new</span> ConcurrentDictionary&lt;<span style=\"color:blue\">string</span>, UncompressedRowViewModel&gt;();\n        <span style=\"color:blue\">private</span> UncompressedRowViewModel GetUncompressedRowViewModel(OrderStatusViewModel model)\n        {\n            <span style=\"color:blue\">if</span> (model == <span style=\"color:blue\">null</span>)\n                <span style=\"color:blue\">return</span> _uncompressedRowViewModels.GetOrAdd(<span style=\"color:#a31515\">&quot;&quot;</span>, s2 =&gt; <span style=\"color:blue\">new</span> UncompressedRowViewModel());\n\n            <span style=\"color:blue\">return</span> _uncompressedRowViewModels.GetOrAdd(model.InternalId,\n                                                                s2 =&gt;\n                                                                <span style=\"color:blue\">new</span> UncompressedRowViewModel() { UnderlyingOrder = model });\n        }\n\n        <span style=\"color:blue\">private</span> ConcurrentDictionary&lt;<span style=\"color:blue\">string</span>, CompressedRowViewModel&gt; _compressedRowViewModels = <span style=\"color:blue\">new</span> ConcurrentDictionary&lt;<span style=\"color:blue\">string</span>, CompressedRowViewModel&gt;();\n        <span style=\"color:blue\">private</span> CompressedRowViewModel GetCompressedRowViewModel(<span style=\"color:blue\">decimal</span>? Ask, <span style=\"color:blue\">int</span> AskSize, <span style=\"color:blue\">decimal</span>? Bid, <span style=\"color:blue\">int</span> BidSize, <span style=\"color:blue\">string</span> Exchange, <span style=\"color:blue\">string</span> Isin, <span style=\"color:blue\">int</span> OrderBuyCount, <span style=\"color:blue\">int</span> OrderSellCount, RowSide RowSide)\n        {\n\n            <span style=\"color:blue\">return</span> <span style=\"color:blue\">new</span> CompressedRowViewModel()\n                       {\n                           Ask = Ask,\n                           AskSize = AskSize,\n                           Bid = Bid,\n                           BidSize = BidSize,\n                           Exchange = Exchange,\n                           Isin = Isin,\n                           OrderBuyCount = OrderBuyCount,\n                           OrderSellCount = OrderSellCount,\n                           RowSide = RowSide\n                       };\n        }\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>So basically we what we can say is, Obtics is not entirely compatible with lambda and linq.</p>\r\n<p>If you want to shape your viewmodels into another format or use surrogate classes or having aggregation with creating new classes on the fly, Obtics is not for you.</p>\r\n<p>Thanks anyway.</p>\r\n",
    "PostedDate": "2012-07-10T07:32:30.157-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]