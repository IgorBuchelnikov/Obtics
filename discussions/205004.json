[
  {
    "Id": "418273",
    "ThreadId": "205004",
    "Html": "<p>Hi Thomas,</p>\r\n<p>I have&nbsp;the following scenario where I have an ObservableCollection of items which&nbsp;need to be&nbsp;grouped by 2 properties (SubDest and then Dest) displaying Count and Sum such that I can bind to a TreeView displaying SubDest with totals followed by Dest which&nbsp;have same SubDest and then the raw values.</p>\r\n<p>I created a class called Outbound Summary below to achieve that. OrdersgroupedBySubDest creates an IEnumerable of OutboundSummary which is grouped by SubDest and OrdersGroupedByDest works on the IEnumerable OrdersgroupedBySubDest to create another list grouped by SubDest and Dest.</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> OutboundSummary\r\n    {\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">int</span> ExecShares { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">int</span> TotalShares { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">double</span> TotalOrders { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n\r\n        <span style=\"color:Green\">//Groups</span>\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">string</span> SubDest { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">string</span> Dest { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">string</span> System { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n    }\r\n\r\n<span style=\"color:Blue\">public</span> IEnumerable&lt;OutboundSummary&gt; OrdersGroupedBySubDest\r\n        {\r\n            <span style=\"color:Blue\">get</span>\r\n            {\r\n                <span style=\"color:Blue\">return</span>\r\n                    OE.Async(\r\n                            ExpressionObserver.Execute(\r\n                                () =&gt;\r\n                                    (\r\n                                        childOrdersList.GroupBy(x =&gt; <span style=\"color:Blue\">new</span> { x.SubDest })\r\n                                            .Select(x =&gt; <span style=\"color:Blue\">new</span> OutboundSummary\r\n                                            {\r\n                                                SubDest = x.First().SubDest,\r\n                                                Dest = x.First().Dest,\r\n                                                System = x.First().Src,\r\n                                                ExecShares = x.Sum(p =&gt; p.ExecShares),\r\n                                                TotalShares = x.Sum(p =&gt; p.OrdSize),\r\n                                                TotalOrders = x.Count(),\r\n                                            }).OrderByDescending(c =&gt; c.SubDest)\r\n                                    )\r\n                            ).Cascade()\r\n                        );\r\n            }\r\n        }\r\n\r\n\r\n<span style=\"color:Blue\">public</span> IEnumerable OrdersGroupedByDest\r\n        {\r\n            <span style=\"color:Blue\">get</span>\r\n            {\r\n                <span style=\"color:Blue\">return</span>\r\n                    OE.Async(\r\n                            ExpressionObserver.Execute(OrdersGroupedBySubDest, t =&gt;\r\n                                <span style=\"color:Blue\">from</span> d <span style=\"color:Blue\">in</span> t.OfType&lt;OutboundSummary&gt;().ToList()\r\n                                  <span style=\"color:Blue\">group</span> d <span style=\"color:Blue\">by</span> <span style=\"color:Blue\">new</span> {  d.SubDest, d.Dest } <span style=\"color:Blue\">into</span> pg\r\n                                  <span style=\"color:Blue\">select</span> <span style=\"color:Blue\">new</span> { Process = pg.Key, Items = pg }\r\n                            ).Cascade().AsEnumerable()\r\n                        );\r\n            }\r\n        }\r\n</pre>\r\n</div>\r\n<p>I want to bind the OrdersGroupedByDest to the following treeview .</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TreeView</span> <span style=\"color:Red\">Grid.Row</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">1</span><span style=\"color:Black\">&quot;</span>  <span style=\"color:Red\">Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">_treeView</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n                                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TreeView.Resources</span><span style=\"color:Blue\">&gt;</span>\r\n                                    <span style=\"color:Green\">&lt;!-- Level 0 template leaves space for 2 child &quot;Toggle&quot; levels --&gt;</span>\r\n                                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">HierarchicalDataTemplate</span> <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">x:Key</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Template</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">DataType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type outbound:OutboundSummary}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n                                        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n                                            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid.ColumnDefinitions</span><span style=\"color:Blue\">&gt;</span>\r\n                                                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">SharedSizeGroup</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">SubDest</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">SharedSizeGroup</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Toggle</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">SharedSizeGroup</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Toggle</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">SharedSizeGroup</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">TotalShares</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">SharedSizeGroup</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">TotalOrders</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                            <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid.ColumnDefinitions</span><span style=\"color:Blue\">&gt;</span>\r\n                                            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">Grid.Column</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">0</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Text</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding SubDest}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                                            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">Grid.Column</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">3</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Text</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Dest}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Style</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{StaticResource TextBlockBoldStyle}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                                            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">Grid.Column</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">4</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Text</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding TotalOrders}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Style</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{StaticResource TextBlockBoldStyle}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                                        <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n                                        <span style=\"color:Green\">&lt;!-- Level 1 template leaves space for 1 child &quot;Toggle&quot; level --&gt;</span>\r\n                                        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">HierarchicalDataTemplate.ItemTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n                                            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">HierarchicalDataTemplate</span> <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Items}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">DataType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type outbound:OutboundSummary}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n                                                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span> <span style=\"color:Red\">Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">grd</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n                                                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid.ColumnDefinitions</span><span style=\"color:Blue\">&gt;</span>\r\n                                                        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">SharedSizeGroup</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Dest</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                                        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span><span style=\"color:Blue\">/&gt;</span>\r\n                                                        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">SharedSizeGroup</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Toggle</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                                        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">SharedSizeGroup</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">TotalShares</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                                        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">SharedSizeGroup</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">TotalOrders</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                                    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid.ColumnDefinitions</span><span style=\"color:Blue\">&gt;</span>\r\n                                                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">Grid.Column</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">0</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Text</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Process.System}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                                                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">Grid.Column</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">3</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Text</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Process.TotalShares}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Style</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{StaticResource TextBlockBoldStyle}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                                                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">Grid.Column</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">4</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Text</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Process.TotalOrders}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Style</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{StaticResource TextBlockBoldStyle}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                                                <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n                                            <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">HierarchicalDataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n                                        <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">HierarchicalDataTemplate.ItemTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n                                    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">HierarchicalDataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n                                <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">TreeView.Resources</span><span style=\"color:Blue\">&gt;</span>\r\n                            <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">TreeView</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>&nbsp;However OrdersGroupedByDest creates an IEnumerable of type AnonymousType#1 and does not bind to the tree.</p>\r\n<p>My 1st question is , Is this&nbsp;approach of creating&nbsp;2 ExpressionObservers to group by 2 properties the right way of doing it or do you suggest a different approach. The underlying ObservableCollection is changed via socket callback so performance is important.</p>\r\n<p>The 2nd question is more related to WPF than Obtics, where by how would you bind an Anonymous Type to a HierarchicalDataTemplate for a treeview.</p>\r\n<p>Any help is as usual appreciated</p>\r\n<p>Thanks</p>\r\n<p>Vinay</p>",
    "PostedDate": "2010-03-15T08:24:37.383-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "418353",
    "ThreadId": "205004",
    "Html": "<p>Basically, how can I create a multi-grouped structure that could be binded to a Treeview.&nbsp;An example of the linq is below</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> IEnumerable&lt;SupplierCountryStockGroup&gt; GetSupplierCountries_StockGroups_Products()\r\n    {\r\n      <span style=\"color:Blue\">var</span> GroupedProducts = <span style=\"color:Blue\">from</span> p <span style=\"color:Blue\">in</span> dc.Products.OrderBy(o =&gt; o.UnitsInStock)\r\n                            <span style=\"color:Blue\">where</span> p.UnitsInStock != <span style=\"color:Blue\">null</span>\r\n                            <span style=\"color:Blue\">group</span> p <span style=\"color:Blue\">by</span> <span style=\"color:Blue\">new</span> { Country = p.Supplier.Country, StockGroup = p.UnitsInStock &gt; 50 } <span style=\"color:Blue\">into</span> gr\r\n                            <span style=\"color:Blue\">select</span> <span style=\"color:Blue\">new</span> UnitsInStockGroup() \r\n                              { Country = gr.Key.Country, StockGroup = gr.Key.StockGroup, Products = gr };\r\n \r\n      <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">from</span> p <span style=\"color:Blue\">in</span> GroupedProducts\r\n             <span style=\"color:Blue\">group</span> p <span style=\"color:Blue\">by</span> <span style=\"color:Blue\">new</span> { Country = p.Country } <span style=\"color:Blue\">into</span> gr\r\n             <span style=\"color:Blue\">select</span> <span style=\"color:Blue\">new</span> SupplierCountryStockGroup() { Country = gr.Key.Country, StockGroups = gr };\r\n    }\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;Thanks</p>\r\n<p>Vinay</p>",
    "PostedDate": "2010-03-15T11:16:38.117-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "418650",
    "ThreadId": "205004",
    "Html": "<p>Hi Vinay,</p>\r\n<p>I believe that WPF can only bind to properties. Anonymous types implement their members as fields. This means that in WPF you can not bind to the members of an anonyous type.</p>\r\n<p>This is a bit of a bummer but the solution is to create a named type like you did for&nbsp;OutboundSummary. If you&nbsp;know that the members will never get updated&nbsp;you will get a somewhat better performance in Obtics if you would seal the type. In this way Obtics&nbsp;knows it will never get change notifications from an object of that type and will not try to register for such notifications.</p>\r\n<p>If&nbsp;performancy is an issue&nbsp;I would dispatch the changes to your ObservableCollection asynchronously.&nbsp;So invoke a different thread to do the updating and return from your socket callback quickly.</p>\r\n<p>You could also access your ObservableCollection via one of the Async() overrides.&nbsp;In that way&nbsp;change notifications from the ObservableCollection would get dispatched. ( So: OE.Async( dc.Products ).OrderBy( ... etc. )&nbsp; Note that this would dispatch changes to the collection only&nbsp;and not changes to the individual members of the collection! This would be fine of you would only add or remove Product objects.&nbsp;</p>\r\n<p>Regs,</p>\r\n<p>Thomas.<br>&nbsp;<br>&nbsp;</p>",
    "PostedDate": "2010-03-16T05:34:20.92-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]