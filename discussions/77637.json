[
  {
    "Id": "265460",
    "ThreadId": "77637",
    "Html": "<p>Thomas</p>\r\n<p>I have an observablecollection of type&nbsp;Customer (Name, State, Income, Expense, ...). I am attempting to bind a listbox to a view grouped by&nbsp;State and display the income and expense as an aggregate around it.</p>\r\n<p>I used the ExpressionObserver to achieve the following.</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> IEnumerable&lt;<span style=\"color:Blue\">Customer</span>&gt; Grouped\r\n        {\r\n            <span style=\"color:Blue\">get</span>\r\n            {\r\n             <span style=\"color:Blue\">return</span> ExpressionObserver.Execute(\r\n                        custOrdersList,\r\n                            n =&gt; n.Select(p =&gt; p.State).Distinct()\r\n                    ).Cascade();\r\n            }\r\n        }\r\n</pre>\r\n<pre><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\"><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\"><span style=\"color:Blue\">&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;<p>\t\t&lt;</p>&lt;/font&gt;&lt;/font&gt;<span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">ListBox</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Name</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;filtrMon&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> SelectionMode</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;Extended&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> ItemsSource=&quot;{Binding Grouped.Value}&quot;&gt;</span></span></span></span><span style=\"color:Blue\">&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;<p>&nbsp;</p>&lt;/font&gt;<span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">ListBox</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Name</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;filtrMon&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> SelectionMode</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;Extended&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> ItemsSource=&quot;{Binding Grouped.Value}&quot;&gt;</span></span></span></span><p><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">ListBox</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Name</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;filtrMon&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> SelectionMode</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;Extended&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> ItemsSource=&quot;{Binding Grouped.Value}&quot;&gt;</span></span></p></span></pre>\r\n<pre><span style=\"color:Blue\">\t\t\t&lt;</span><span style=\"color:#A31515\">ListBox.ItemTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n                                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n                                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">StackPanel</span><span style=\"color:Blue\">&gt;</span>                                        <span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;<p>\t\t\t\t\t&lt;</p>&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;<p>&nbsp;</p>&lt;/font&gt;</span><p><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Text</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;State&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> FontSize</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;9&quot; &gt;&lt;/</span></span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">&gt;</span></span></p><p>\t\t\t\t\t&lt;<span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Text</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;Income&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> FontSize</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;9&quot; &gt;&lt;/</span></span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">&gt;</span></span></p><p>\t\t\t\t\t&lt;<span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> Text</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;Expense&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> FontSize</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;9&quot; &gt;&lt;/</span></span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">TextBlock</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">&gt;</span></span></p><p>\t\t\t\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">StackPanel</span><span style=\"color:Blue\">&gt;</span>\r\n                                <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n                            <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ListBox.ItemTemplate</span><span style=\"color:Blue\">&gt;</span></p><p><span style=\"color:Blue\">\t\t&lt;ListBox&gt;</span>\r\n</p></pre>\r\n</div>\r\n</pre>\r\n<pre>The snippet above does not bind to the aggregates. </pre>\r\n<pre>Any help on this will be highly appreciated.</pre>\r\n<pre>Thanks</pre>\r\n<pre>Vinay&nbsp;</pre>\r\n</div>",
    "PostedDate": "2009-12-09T13:44:38.65-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "265568",
    "ThreadId": "77637",
    "Html": "<p>Hi Vinay,</p>\r\n<p>It looks you are trying to bind to a Value property of Grouped. But Grouped is of type IEnumerable&lt;<span style=\"color:blue\">Customer</span>&gt; and does not have a Value property. I think you should bind to Grouped directly and not to Grouped.Value.</p>\r\n<p>Regs,</p>\r\n<p>Thomas.</p>",
    "PostedDate": "2009-12-09T23:06:41.803-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "265780",
    "ThreadId": "77637",
    "Html": "<p>Thomas</p>\r\n<p>Thanks for the reply. On the same line is there a way to return IEnumerable&lt;Customer&gt; by grouping the list by a property say State and Aggregating Expense and Income.</p>\r\n<pre>public IEnumerable StateGrouped\r\n        {\r\n            get\r\n            {\r\n                return ExpressionObserver.Execute(custOrdersList, t =&gt;\r\n                        from q in t.OfType().ToList()\r\n                         group new{ \r\n                             q.Expense, q.Income, q.State\r\n                         } by q.Moniker\r\n                       ).Cascade();\r\n            }\r\n        }</pre>\r\n<p>I am trying to return an IEnumerable grouped by a property State with Aggregated values for Income and Expense.</p>\r\n<p>In essence this is what I am trying to observer</p>\r\n<pre>var q = _selectedCustomers.OfType().GroupBy(x =&gt; x.State)\r\n            .Select(x =&gt; new CustomerSummary\r\n            {\r\n                State = x.First().State,\r\n                Expense = x.Sum(p =&gt; p.Expense),\r\n                Income = x.Sum(p =&gt; p.Income),\r\n            }).OrderByDescending(c =&gt; c.Expense);\r\n</pre>\r\n<pre>q here returns a list grouped by state with aggregated expense and income.</pre>\r\n<pre>Again thanks alot for your help</pre>\r\n<pre>Vinay</pre>",
    "PostedDate": "2009-12-10T09:13:41.777-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "265810",
    "ThreadId": "77637",
    "Html": "<p>Hi Vinay,</p>\r\n<p>If you have a working expression that returns the desired result then just feed that expression the ExpressionObserver.Execute method and you should get a live version.</p>\r\n<p>So if you latter expression works (probably need to specify a type in your call to OfType()):</p>\r\n<p>ExpressionObserver.Execute(<br>&nbsp;&nbsp;&nbsp; _selectedCustomers,<br>&nbsp;&nbsp;&nbsp; selectedCustomers =&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; selectedCustomers.OfType().GroupBy(x =&gt; x.State)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Select(x =&gt; new CustomerSummary<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; State = x.First().State,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Expense = x.Sum(p =&gt; p.Expense),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Income = x.Sum(p =&gt; p.Income),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }).OrderByDescending(c =&gt; c.Expense)<br>).Cascade();&nbsp;</p>\r\n<p>If you use Silverlight you unfortunately can't use anonymous types in observable expressions. This is due to a lack of reflection permissions in a Silverlight runtime context.</p>\r\n<p>Regs,</p>\r\n<p>Thomas.</p>",
    "PostedDate": "2009-12-10T10:42:52.96-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "266333",
    "ThreadId": "77637",
    "Html": "<p>Hi Thomas using the following I am able to group based on a particular property. However, when there is a change in the collection I get a Catastrophic error</p>\r\n<pre>public IEnumerable StateGrouped\r\n        {\r\n            get\r\n            {\r\n                return ExpressionObserver.Execute(custOrdersList, t =&gt;\r\n                        t.OfType().ToList().GroupBy(x =&gt; x.State)\r\n                        .Select(x =&gt; new StateSummary\r\n                        {\r\n                            State = x.First().State,\r\n                            Expense = x.Sum(p =&gt; p.Expense),\r\n                            TotalIncome = x.Sum(p =&gt; p.Income),\r\n                        }).OrderByDescending(c =&gt; c.Expense)\r\n                       ).Cascade();\r\n            }\r\n        }</pre>\r\n<pre>I bind the Above to a usercontrol which contains a listbox. But when i edit an item in the original list (custOrdersList) </pre>\r\n<pre>i get a catastrophic error. The list is also binded to a datagrid via PagedCollectionView. </pre>\r\n<pre>Thanks</pre>\r\n<pre>Vinay</pre>",
    "PostedDate": "2009-12-11T09:51:36.07-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "266597",
    "ThreadId": "77637",
    "Html": "<p>Hi Vinay,</p>\r\n<p>The most likely cause would be that your StateSummary class is not 'well-behaved'. If you would create two instances (a and b)&nbsp;of StateSummary with the same arguments that it should be so that a.Equals(b) == true. If StateSummary would be a struct then this is automatically the case but if it is a class then you need to override the Equals() and GetHascode() methods to make sure that a.Equals(b) == true.</p>\r\n<p>Regs,</p>\r\n<p>Thomas.</p>",
    "PostedDate": "2009-12-12T05:45:55.43-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]